//ID is generated by the client
// Create a new coding conversation

import { NextResponse } from "next/server"
import { Coding } from "@/db/tables"
import { auth } from "@clerk/nextjs"

import { db } from "@/lib/db"

interface IParams {
  codingId: string
}
export async function GET(req: Request, { params }: { params: IParams }) {
  try {
    const { userId } = auth()

    if (!userId) {
      return new NextResponse("Unauthorized", { status: 401 })
    }

    await db.insert(Coding).values({
      id: params.codingId,
      user_id: userId,
    })

    return NextResponse.json("Conversation created")
  } catch (e) {
    console.log(e)
    return new NextResponse("Internal Error", { status: 500 })
  }
}
